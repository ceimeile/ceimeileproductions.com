{"version":3,"sources":["components/mailing-list/MailingListInput.tsx","components/Banner/Banner.tsx","containers/home/Home.tsx","containers/about/About.tsx","containers/team/Team.tsx","containers/artists/Artists.tsx","containers/work-with-us/WorkWithUs.tsx","containers/default-page/DefaultPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Title","React","useState","submitted","setSubmitted","submitting","setSubmitting","Search","level","className","placeholder","enterButton","size","type","name","id","loading","onSearch","value","match","jsonp","param","err","data","msg","includes","message","error","success","disabled","span","offset","Banner","MailingListInput","status","title","subTitle","extra","to","Content","Footer","Sider","withRouter","collapsed","setCollapsed","style","minHeight","collapsible","onCollapse","theme","selectedKeys","window","location","pathname","defaultSelectedKeys","mode","Item","key","HomeOutlined","target","rel","href","ExportOutlined","TeamOutlined","UserOutlined","BulbOutlined","margin","exact","path","component","Home","About","Team","Artists","WorkWithUs","DefaultPage","textAlign","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"scAIQA,E,IAAAA,MAEO,aAAO,IAAD,EACeC,IAAMC,UAAkB,GADvC,mBACZC,EADY,KACDC,EADC,OAEiBH,IAAMC,UAAkB,GAFzC,mBAEZG,EAFY,KAEAC,EAFA,KA2BXC,EA3BW,IA2BXA,OACR,OACE,oCACE,kBAACP,EAAD,CAAOQ,MAAO,EAAGC,UAAU,qBAA3B,0BACA,kBAACF,EAAD,CACEG,YAAY,gBACZC,YAAY,OACZC,KAAK,QACLC,KAAK,QACLC,KAAK,QACLC,GAAG,YACHC,QAASX,EACTY,SAnCW,SAACC,GACZA,EAAMC,MAAM,6EACdC,IAAM,4HAAD,OACyHF,GAC5H,CAAEG,MAAO,MACT,SAACC,EAAKC,GACJjB,GAAc,GAEZiB,EAAKC,IAAIC,SACP,sBAGFC,EAAA,EAAQC,MAAM,gDAAiD,IAE/DD,EAAA,EAAQE,QAAQ,uCAAwC,GACxDxB,GAAa,IAEfE,GAAc,MAGboB,EAAA,EAAQC,MAAM,sCAAuC,IAgBxDE,SAAU1B,MC5CVH,E,IAAAA,MAEO,aACX,OACI,oCACI,uBAAKS,UAAU,eACX,uBAAKqB,KAAM,IACP,kBAAC,EAAD,CAAOrB,UAAU,mBAAmBD,MAAO,GAA3C,iBAEJ,uBAAKsB,KAAM,IACP,kBAAC,EAAD,CAAOrB,UAAU,mBAAmBD,MAAO,GAA3C,sBAGR,2BACI,uBAAKsB,KAAM,EAAGC,OAAQ,GAClB,kBAAC,EAAD,CAAOtB,UAAU,mBAAmBD,MAAO,GAA3C,mBCXL,G,OAAA,WACb,OACE,oCACE,kBAACwB,EAAD,MACA,2BACE,uBAAKF,KAAM,EAAGC,OAAQ,GACpB,kBAACE,EAAD,WCVK,aACb,OACE,oCACE,uCCHS,aACb,OACE,oCACE,sCCHS,aACb,OACE,oCACE,yCCHS,aACb,OACE,oCACE,8C,uFCDS,aACX,OACI,uBACIC,OAAO,MACPC,MAAM,MACNC,SAAS,8CACTC,MACI,kBAAC,IAAD,CAAMC,GAAG,KACL,uBAAQzB,KAAK,WAAb,iBCMZ0B,E,IAAAA,QAASC,E,IAAAA,OAAQC,E,IAAAA,MAsEVC,mBApEf,WAAgB,IAAD,EACqBzC,IAAMC,UAAkB,GAD7C,mBACNyC,EADM,KACKC,EADL,KAOb,OACE,uBAAQC,MAAO,CAAEC,UAAW,UAC1B,kBAACL,EAAD,CAAOM,aAAW,EAACJ,UAAWA,EAAWK,WAN1B,SAACL,GAClBC,EAAaD,KAMT,uBAAMM,MAAM,OAAOC,aAAc,CAACC,OAAOC,SAASC,UAAWC,oBAAqB,CAAC,KAAMC,KAAK,UAC5F,sBAAMC,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAMnB,GAAG,KACP,kBAACoB,EAAA,EAAD,MACA,wCAGJ,sBAAMF,KAAN,KACE,uBAAGG,OAAO,SAASC,IAAI,sBAAsBC,KAAK,wCAChD,8BACE,kBAACC,EAAA,EAAD,MACA,yCAIN,sBAAMN,KAAN,CAAWC,IAAI,SACb,kBAAC,IAAD,CAAMnB,GAAG,SACP,8BACE,kBAACyB,EAAA,EAAD,MACA,sDAIN,sBAAMP,KAAN,CAAWC,IAAI,YACb,kBAAC,IAAD,CAAMnB,GAAG,YACP,8BACE,kBAAC0B,EAAA,EAAD,MACA,sDAIN,sBAAMR,KAAN,CAAWC,IAAI,iBACb,kBAAC,IAAD,CAAMnB,GAAG,iBACP,kBAAC2B,EAAA,EAAD,MACA,kDAKR,uBAAQxD,UAAU,eAChB,kBAAC8B,EAAD,CAASM,MAAO,CAAEqB,OAAQ,cACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,IAChC,kBAAC,IAAD,CAAOH,KAAK,QAAQC,UAAWG,IAC/B,kBAAC,IAAD,CAAOJ,KAAK,WAAWC,UAAWI,IAClC,kBAAC,IAAD,CAAOL,KAAK,gBAAgBC,UAAWK,IACvC,kBAAC,IAAD,CAAOL,UAAWM,MAGtB,kBAACnC,EAAD,CAAQK,MAAO,CAAE+B,UAAW,WAA5B,2CCpEYC,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAAS3D,MACvB,2DCXN4D,IAASC,OACL,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9D,GACL+D,QAAQ/D,MAAMA,EAAMD,c","file":"static/js/main.b5147337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport jsonp from \"jsonp\";\r\nimport { Typography, message } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n  const [submitted, setSubmitted] = React.useState<boolean>(false);\r\n  const [submitting, setSubmitting] = React.useState<boolean>(false);\r\n\r\n  const onSubmit = (value: string) => {\r\n    if (value.match(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\r\n      jsonp(\r\n        `https://ceimeileproductions.us19.list-manage.com/subscribe/post-json?u=0ebc7eec90e214ebdcfe9117a&amp;id=4d02528246&EMAIL=${value}`,\r\n        { param: \"c\" },\r\n        (err, data) => {\r\n          setSubmitting(true);\r\n          if (\r\n            data.msg.includes(\r\n              \"already subscribed\" || data.status !== \"success\" || err\r\n            )\r\n          ) {\r\n            message.error(\"Oops, something went wrong. Please try again.\", 3);\r\n          } else {\r\n            message.success(\"Thanks for joining our mailing list!\", 3);\r\n            setSubmitted(true);\r\n          }\r\n          setSubmitting(false)\r\n        }\r\n      );\r\n    } else message.error(\"Please enter a valid email address.\", 3);\r\n  };\r\n\r\n  const { Search } = Input;\r\n  return (\r\n    <>\r\n      <Title level={3} className=\"mailing-list-text\">Join our mailing list!</Title>\r\n      <Search\r\n        placeholder=\"Email address\"\r\n        enterButton=\"Join\"\r\n        size=\"large\"\r\n        type=\"email\"\r\n        name=\"EMAIL\"\r\n        id=\"mce-EMAIL\"\r\n        loading={submitting}\r\n        onSearch={onSubmit}\r\n        disabled={submitted}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <Row className=\"tagline-row\">\r\n                <Col span={12}>\r\n                    <Title className=\"tagline-col-text\" level={2}>NEW THEATRE.</Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Title className=\"tagline-col-text\" level={2}>NEW EXPERIENCES.</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={8} offset={8}>\r\n                    <Title className=\"coming-soon-text\" level={3}>coming soon</Title>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport MailingListInput from \"../../components/mailing-list/MailingListInput\";\r\nimport Banner from \"../../components/Banner/Banner\";\r\nimport { Col, Row } from \"antd\";\r\nimport \"./Home.css\"\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <Row>\r\n        <Col span={8} offset={8}>\r\n          <MailingListInput />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1>About</h1>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1>Team</h1>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1>Artists</h1>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <h1>Work with us</h1>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={\r\n                <Link to=\"/\">\r\n                    <Button type=\"primary\">Back Home</Button>\r\n                </Link>\r\n            }\r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Link, withRouter, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/home/Home\";\r\nimport About from \"./containers/about/About\";\r\nimport Team from \"./containers/team/Team\";\r\nimport Artists from \"./containers/artists/Artists\";\r\nimport WorkWithUs from \"./containers/work-with-us/WorkWithUs\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  TeamOutlined,\r\n  HomeOutlined,\r\n  UserOutlined,\r\n  BulbOutlined,\r\n  ExportOutlined\r\n} from \"@ant-design/icons\";\r\nimport \"./App.css\";\r\nimport DefaultPage from './containers/default-page/DefaultPage';\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nfunction App() {\r\n  const [collapsed, setCollapsed] = React.useState<boolean>(false);\r\n\r\n  const onCollapse = (collapsed: boolean) => {\r\n    setCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n        <Menu theme=\"dark\" selectedKeys={[window.location.pathname]} defaultSelectedKeys={[\"/\"]} mode=\"inline\">\r\n          <Menu.Item key=\"/\">\r\n            <Link to=\"/\">\r\n              <HomeOutlined />\r\n              <span>Home</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://blog.ceimeileproductions.com\">\r\n              <span>\r\n                <ExportOutlined />\r\n                <span>News</span>\r\n              </span>\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/team\">\r\n            <Link to=\"/team\">\r\n              <span>\r\n                <TeamOutlined />\r\n                <span>Team Céim Eile</span>\r\n              </span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/artists\">\r\n            <Link to=\"/artists\">\r\n              <span>\r\n                <UserOutlined />\r\n                <span>Associate Artists</span>\r\n              </span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/work-with-us\">\r\n            <Link to=\"/work-with-us\">\r\n              <BulbOutlined />\r\n              <span>Work with us</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Content style={{ margin: \"10px 16px\" }}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/team\" component={Team} />\r\n            <Route path=\"/artists\" component={Artists} />\r\n            <Route path=\"/work-with-us\" component={WorkWithUs} />\r\n            <Route component={DefaultPage} />\r\n          </Switch>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          Céim Eile Productions © 2020\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.less\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}